
# Morse-Kelly set theory.

incl_equi. ⊢ A ⊆ B ↔ ∀x. x ∈ A → x ∈ B, def.
set_equi. ⊢ set M ↔ ∃C. M ∈ C, def.
intersection2_eq. ⊢ A ∩ B = {x | x ∈ A ∧ x ∈ B}, def.
union2_eq. ⊢ A ∪ B = {x | x ∈ A ∨ x ∈ B}, def.
empty_set_eq. ⊢ empty_set = {x | ⊥}, def.
sg_eq. ⊢ {a} = {x | set a → x = a}, def.
pair_eq. ⊢ (x, y) = {{x}, {x, y}}, def.
power_eq. ⊢ power X = {A | A ⊆ X}, def.
prod_eq. ⊢ prod A B =
  {t | ∃x. ∃y. x ∈ A ∧ y ∈ B ∧ t = (x, y)}, def.

eq_refl. ⊢ ∀x. x = x, axiom.
eq_subst. ⊢ ∀x. ∀y. x = y → P x → P y, axiom.

comp_ax. ⊢ u ∈ {x | P x} ↔ set u ∧ P u, axiom.
ext_ax. ⊢ (∀x. x ∈ A ↔ x ∈ B) → A = B, axiom.
pair_set_ax. ⊢ set x → set y → set {x, y}, axiom.

# Examples.

incl_elim. ⊢ A ⊆ B → (∀x. x ∈ A → x ∈ B), bij_eliml incl_equi.
incl_intro. ⊢ (∀x. x ∈ A → x ∈ B) → A ⊆ B, bij_elimr incl_equi.

1. 1 ⊢ x ∈ A, basic.
2. ⊢ x ∈ A → x ∈ A, subj_intro 1.
3. ⊢ ∀x. x ∈ A → x ∈ A, uq_intro 2.
4. ⊢ A ⊆ A ↔ ∀x. x ∈ A → x ∈ A, subst incl_equi.
5. ⊢ (∀x. x ∈ A → x ∈ A) → A ⊆ A, bij_elimr 4.
6. ⊢ A ⊆ A, subj_elim 5 3.
incl_refl. ⊢ ∀A. A ⊆ A, uq_intro 6.

1. 1 ⊢ A ⊆ B, basic.
2. 2 ⊢ B ⊆ C, basic.
3. 1 ⊢ ∀x. x ∈ A → x ∈ B, subj_elim incl_elim 1.
4. 1 ⊢ x ∈ A → x ∈ B, uq_elim 3.
5. ⊢ B ⊆ C → (∀x. x ∈ B → x ∈ C), subst incl_elim.
6. 2 ⊢ ∀x. x ∈ B → x ∈ C, subj_elim 5 2.
7. 2 ⊢ x ∈ B → x ∈ C, uq_elim 6.
8. 8 ⊢ x ∈ A, basic.
9. 1, 8 ⊢ x ∈ B, subj_elim 4 8.
10. 2, 1, 8 ⊢ x ∈ C, subj_elim 7 9.
11. 2, 1 ⊢ x ∈ A → x ∈ C, subj_intro 10.
12. 2, 1 ⊢ ∀x. x ∈ A → x ∈ C, uq_intro 11.
13. ⊢ (∀x. x ∈ A → x ∈ C) → A ⊆ C, subst incl_intro.
14. 2, 1 ⊢ A ⊆ C, subj_elim 13 12.
15. 1 ⊢ B ⊆ C → A ⊆ C, subj_intro 14.
16. ⊢ A ⊆ B → B ⊆ C → A ⊆ C, subj_intro 15.
17. ⊢ ∀C. A ⊆ B → B ⊆ C → A ⊆ C, uq_intro 16.
18. ⊢ ∀B. ∀C. A ⊆ B → B ⊆ C → A ⊆ C, uq_intro 17.
incl_trans. ⊢ ∀A. ∀B. ∀C. A ⊆ B → B ⊆ C → A ⊆ C, uq_intro 18.

1. 1 ⊢ x ∈ A ∩ B, basic.
2. ⊢ ∀X. ∀Y. X = Y → x ∈ X → x ∈ Y, subst eq_subst.
3. ⊢ ∀Y. A ∩ B = Y → x ∈ A ∩ B → x ∈ Y, uq_elim 2.
4. ⊢ A ∩ B = {x | x ∈ A ∧ x ∈ B} → x ∈ A ∩ B
      → x ∈ {x | x ∈ A ∧ x ∈ B}, uq_elim 3.
5. ⊢ x ∈ A ∩ B → x ∈ {x | x ∈ A ∧ x ∈ B}, subj_elim 4 intersection2_eq.
6. 1 ⊢ x ∈ {x | x ∈ A ∧ x ∈ B}, subj_elim 5 1.
7. ⊢ u ∈ {x | P x} → set u ∧ P u, bij_eliml comp_ax.
8. ⊢ x ∈ {x | x ∈ A ∧ x ∈ B} → set x ∧ (x ∈ A ∧ x ∈ B), subst 7.
9. 1 ⊢ set x ∧ (x ∈ A ∧ x ∈ B), subj_elim 8 6.
10. 1 ⊢ x ∈ A ∧ x ∈ B, conj_elimr 9.
intersection2_elim. ⊢ x ∈ A ∩ B → x ∈ A ∧ x ∈ B, subj_intro 10.

1. 1 ⊢ x ∈ A ∩ B, basic.
2. 1 ⊢ x ∈ A ∧ x ∈ B, subj_elim intersection2_elim 1.
3. 1 ⊢ x ∈ A, conj_eliml 2.
4. ⊢ x ∈ A ∩ B → x ∈ A, subj_intro 3.
5. ⊢ ∀x. x ∈ A ∩ B → x ∈ A, uq_intro 4.
6. ⊢ (∀x. x ∈ A ∩ B → x ∈ A) → A ∩ B ⊆ A, subst incl_intro.
intersection2_incl_left. ⊢ A ∩ B ⊆ A, subj_elim 6 5.

7. 1 ⊢ x ∈ B, conj_elimr 2.
8. ⊢ x ∈ A ∩ B → x ∈ B, subj_intro 7.
9. ⊢ ∀x. x ∈ A ∩ B → x ∈ B, uq_intro 8.
10. ⊢ (∀x. x ∈ A ∩ B → x ∈ B) → A ∩ B ⊆ B, subst incl_intro.
intersection2_incl_right. ⊢ A ∩ B ⊆ B, subj_elim 10 9.

1. ⊢ ∀y. x = y → P x → P y, uq_elim eq_subst.
2. ⊢ x = y → P x → P y, uq_elim 1.
3. ⊢ x = y → x = u → y = u, subst 2.
4. ⊢ ∀u. x = y → x = u → y = u, uq_intro 3.
5. ⊢ x = y → x = x → y = x, uq_elim 4.
6. ⊢ x = x, uq_elim eq_refl.
7. 7 ⊢ x = y, basic.
8. 7 ⊢ x = x → y = x, subj_elim 5 7.
9. 7 ⊢ y = x, subj_elim 8 6.
10. ⊢ x = y → y = x, subj_intro 9.
11. ⊢ ∀y. x = y → y = x, uq_intro 10.
eq_symm. ⊢ ∀x. ∀y. x = y → y = x, uq_intro 11.

1. 1 ⊢ A ↔ ¬A, basic.
2. 1 ⊢ A → ¬A, bij_eliml 1.
3. 3 ⊢ A, basic.
4. 1, 3 ⊢ ¬A, subj_elim 2 3.
5. 1, 3 ⊢ ⊥, neg_elim 4 3.
6. 1 ⊢ ¬A, neg_intro 5.
7. 1 ⊢ ¬A → A, bij_elimr 1.
8. 1 ⊢ A, subj_elim 7 6.
9. 1 ⊢ ⊥, neg_elim 6 8.
diag_contra. ⊢ ¬(A ↔ ¬A), neg_intro 9.

# Russell's paradox.

DiagCl_eq. ⊢ DiagCl = {x | ¬x ∈ x}, def.

1. 1 ⊢ u ∈ DiagCl, basic.
2. ⊢ ∀A. ∀B. A = B → u ∈ A → u ∈ B, subst eq_subst.
3. ⊢ ∀B. DiagCl = B → u ∈ DiagCl → u ∈ B, uq_elim 2.
4. ⊢ DiagCl = {x | ¬x ∈ x} → u ∈ DiagCl → u ∈ {x | ¬x ∈ x}, uq_elim 3.
5. ⊢ u ∈ DiagCl → u ∈ {x | ¬x ∈ x}, subj_elim 4 DiagCl_eq.
6. 1 ⊢ u ∈ {x | ¬x ∈ x}, subj_elim 5 1.
7. ⊢ u ∈ {x | ¬x ∈ x} ↔ set u ∧ ¬u ∈ u, subst comp_ax.
8. ⊢ u ∈ {x | ¬x ∈ x} → set u ∧ ¬u ∈ u, bij_eliml 7.
9. 1 ⊢ set u ∧ ¬u ∈ u, subj_elim 8 6.
10. 1 ⊢ ¬u ∈ u, conj_elimr 9.
11. ⊢ u ∈ DiagCl → ¬u ∈ u, subj_intro 10.
12. 12 ⊢ ¬u ∈ u, basic.
13. 13 ⊢ set u, basic.
14. 13, 12 ⊢ set u ∧ ¬u ∈ u, conj_intro 13 12.
15. ⊢ set u ∧ ¬u ∈ u → u ∈ {x | ¬x ∈ x}, bij_elimr 7.
16. 13, 12 ⊢ u ∈ {x | ¬x ∈ x}, subj_elim 15 14.
17. ⊢ ∀B. {x | ¬x ∈ x} = B → u ∈ {x | ¬x ∈ x} → u ∈ B, uq_elim 2.
18. ⊢ {x | ¬x ∈ x} = DiagCl → u ∈ {x | ¬x ∈ x} → u ∈ DiagCl, uq_elim 17.
19. ⊢ ∀y. DiagCl = y → y = DiagCl, uq_elim eq_symm.
20. ⊢ DiagCl = {x | ¬x ∈ x} → {x | ¬x ∈ x} = DiagCl, uq_elim 19.
21. ⊢ {x | ¬x ∈ x} = DiagCl, subj_elim 20 DiagCl_eq.
22. ⊢ u ∈ {x | ¬x ∈ x} → u ∈ DiagCl, subj_elim 18 21.
23. 13, 12 ⊢ u ∈ DiagCl, subj_elim 22 16.
24. 13 ⊢ ¬u ∈ u → u ∈ DiagCl, subj_intro 23.
25. 13 ⊢ u ∈ DiagCl ↔ ¬u ∈ u, bij_intro 11 24.
26. ⊢ set u → (u ∈ DiagCl ↔ ¬u ∈ u), subj_intro 25.
27. ⊢ ∀u. set u → (u ∈ DiagCl ↔ ¬u ∈ u), uq_intro 26.
28. ⊢ set DiagCl → (DiagCl ∈ DiagCl ↔ ¬DiagCl ∈ DiagCl), uq_elim 27.
29. 29 ⊢ set DiagCl, basic.
30. 29 ⊢ DiagCl ∈ DiagCl ↔ ¬DiagCl ∈ DiagCl, subj_elim 28 29.
31. ⊢ ¬(DiagCl ∈ DiagCl ↔ ¬DiagCl ∈ DiagCl), subst diag_contra.
32. 29 ⊢ ⊥, neg_elim 31 30.
DiagCl_is_proper. ⊢ ¬set DiagCl, neg_intro 32.
