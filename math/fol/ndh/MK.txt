
# Morse-Kelly set theory.

# DEFINITIONS

incl_equi. ⊢ A ⊆ B ↔ ∀x. x ∈ A → x ∈ B, def.
set_equi. ⊢ set x ↔ ∃C. x ∈ C, def.
empty_set_eq. ⊢ ∅ = {x | ⊥}, def.
sg_eq. ⊢ {a} = {x | set a → x = a}, def.
pair_eq. ⊢ (x, y) = {{x}, {x, y}}, def.
# {x, y} is syntactic sugar for {x} ∪ {y}.

power_eq. ⊢ power M = {A | A ⊆ M}, def.
intersection_eq. ⊢ A ∩ B = {x | x ∈ A ∧ x ∈ B}, def.
union_eq. ⊢ A ∪ B = {x | x ∈ A ∨ x ∈ B}, def.
diff_eq. ⊢ A \ B = {x | x ∈ A ∧ ¬x ∈ B}, def.
Union_eq. ⊢ ⋃M = {x | ∃A. A ∈ M ∧ x ∈ A}, def.
Intersection_eq. ⊢ ⋂M = {x | ∀A. A ∈ M → x ∈ A}, def.
prod_eq. ⊢ A × B =
  {t | ∃x. ∃y. x ∈ A ∧ y ∈ B ∧ t = (x, y)}, def.
UnivCl_eq. ⊢ UnivCl = {x | x = x}, def.
DiagCl_eq. ⊢ DiagCl = {x | ¬x ∈ x}, def.

dom_eq. ⊢ dom R = {x | ∃y. (x, y) ∈ R}, def.
rng_eq. ⊢ rng R = {y | ∃x. (x, y) ∈ R}, def.
img_eq. ⊢ img R A = {y | ∃x. x ∈ A ∧ (x, y) ∈ R}, def.
inv_img_eq. ⊢ inv_img R B = {x | ∃y. y ∈ B ∧ (x, y) ∈ R}, def.
app_eq. ⊢ app f x = ⋂{y | (x, y) ∈ f}, def.

relation_equi. ⊢ relation R ↔ ∀t. t ∈ R → ∃x. ∃y. t = (x, y), def.
function_equi. ⊢ function f ↔ relation f ∧
  ∀x. ∀y1. ∀y2. (x, y1) ∈ f → (x, y2) ∈ f → y1 = y2, def.
map_equi. ⊢ map f X Y ↔ function f ∧ dom f = X ∧ rng f ⊆ Y, def.
inj_equi. ⊢ inj f X Y ↔ map f X Y ∧ ∀a. ∀b.
  a ∈ X → b ∈ X → app f a = app f b → a = b, def.
sur_equi. ⊢ sur f X Y ↔ map f X Y ∧ rng f = Y, def.
bij_equi. ⊢ bij f X Y ↔ inj f X Y ∧ sur f X Y, def.
inv_eq. ⊢ inv f = {t | ∃x. ∃y. t = (y, x) ∧ (x, y) ∈ f}, def.
restr_eq. ⊢ restr f A = f ∩ (A × UnivCl), def.
choice_function_equi. ⊢ choice_function f ↔
  function f ∧ ∀x. x ∈ dom f → app f x ∈ x, def.
composition_eq. ⊢ composition g f = {t | ∃x. ∃y. ∃z.
  t = (x, z) ∧ (x, y) ∈ f ∧ (y, z) ∈ g}, def.

# AXIOMS

lem. ⊢ A ∨ ¬A, axiom.
eq_refl. ⊢ x = x, axiom.
eq_subst. ⊢ x = y → P x → P y, axiom.

ext. ⊢ (∀x. x ∈ A ↔ x ∈ B) → A = B, axiom.
comp. ⊢ u ∈ {x | P x} ↔ set u ∧ P u, axiom.
pairing. ⊢ set x → set y → set {x, y}, axiom.
subset. ⊢ A ⊆ B → set B → set A, axiom.
power. ⊢ set M → set (power M), axiom.
unions. ⊢ set M → set (⋃M), axiom.
regularity. ⊢ ¬A = ∅ → ∃x. x ∈ A ∧ x ∩ A = ∅, axiom.
infinity. ⊢ ∃A. ∅ ∈ A ∧ ∀x. x ∈ A → x ∪ {x} ∈ A, axiom.
substitution. ⊢ function f → set (dom f) → set (rng f), axiom.
choice. ⊢ ∃f. choice_function f ∧ dom f = UnivCl \ {∅}, axiom.

# EXAMPLES

incl_elim. ⊢ A ⊆ B → (∀x. x ∈ A → x ∈ B), bij_eliml incl_equi.
incl_intro. ⊢ (∀x. x ∈ A → x ∈ B) → A ⊆ B, bij_elimr incl_equi.

1. 1 ⊢ x ∈ A, basic.
2. ⊢ x ∈ A → x ∈ A, subj_intro 1.
3. ⊢ ∀x. x ∈ A → x ∈ A, uq_intro 2.
4. ⊢ A ⊆ A ↔ ∀x. x ∈ A → x ∈ A, incl_equi.
5. ⊢ (∀x. x ∈ A → x ∈ A) → A ⊆ A, bij_elimr 4.
6. ⊢ A ⊆ A, subj_elim 5 3.
incl_refl. ⊢ ∀A. A ⊆ A, uq_intro 6.

1. 1 ⊢ A ⊆ B, basic.
2. 2 ⊢ B ⊆ C, basic.
3. 1 ⊢ ∀x. x ∈ A → x ∈ B, subj_elim incl_elim 1.
4. 1 ⊢ x ∈ A → x ∈ B, uq_elim 3.
5. ⊢ B ⊆ C → (∀x. x ∈ B → x ∈ C), incl_elim.
6. 2 ⊢ ∀x. x ∈ B → x ∈ C, subj_elim 5 2.
7. 2 ⊢ x ∈ B → x ∈ C, uq_elim 6.
8. 8 ⊢ x ∈ A, basic.
9. 1, 8 ⊢ x ∈ B, subj_elim 4 8.
10. 2, 1, 8 ⊢ x ∈ C, subj_elim 7 9.
11. 2, 1 ⊢ x ∈ A → x ∈ C, subj_intro 10.
12. 2, 1 ⊢ ∀x. x ∈ A → x ∈ C, uq_intro 11.
13. ⊢ (∀x. x ∈ A → x ∈ C) → A ⊆ C, incl_intro.
14. 1, 2 ⊢ A ⊆ C, subj_elim 13 12.
15. 1 ⊢ B ⊆ C → A ⊆ C, subj_intro 14.
16. ⊢ A ⊆ B → B ⊆ C → A ⊆ C, subj_intro 15.
17. ⊢ ∀C. A ⊆ B → B ⊆ C → A ⊆ C, uq_intro 16.
18. ⊢ ∀B. ∀C. A ⊆ B → B ⊆ C → A ⊆ C, uq_intro 17.
incl_trans. ⊢ ∀A. ∀B. ∀C. A ⊆ B → B ⊆ C → A ⊆ C, uq_intro 18.

1. 1 ⊢ x ∈ A ∩ B, basic.
2. ⊢ X = Y → P X → P Y, eq_subst.
3. ⊢ X = Y → x ∈ X → x ∈ Y, 2.
4. ⊢ A ∩ B = {x | x ∈ A ∧ x ∈ B} → x ∈ A ∩ B →
     x ∈ {x | x ∈ A ∧ x ∈ B}, 3.
5. ⊢ x ∈ A ∩ B → x ∈ {x | x ∈ A ∧ x ∈ B}, subj_elim 4 intersection_eq.
6. 1 ⊢ x ∈ {x | x ∈ A ∧ x ∈ B}, subj_elim 5 1.
7. ⊢ u ∈ {x | P x} → set u ∧ P u, bij_eliml comp.
8. ⊢ u ∈ {x | x ∈ A ∧ x ∈ B} → set u ∧ (u ∈ A ∧ u ∈ B), 7.
9. ⊢ x ∈ {x | x ∈ A ∧ x ∈ B} → set x ∧ (x ∈ A ∧ x ∈ B), 8.
10. 1 ⊢ set x ∧ (x ∈ A ∧ x ∈ B), subj_elim 9 6.
11. 1 ⊢ x ∈ A ∧ x ∈ B, conj_elimr 10.
intersection_elim. ⊢ x ∈ A ∩ B → x ∈ A ∧ x ∈ B, subj_intro 11.

1. 1 ⊢ x ∈ A ∩ B, basic.
2. 1 ⊢ x ∈ A ∧ x ∈ B, subj_elim intersection_elim 1.
3. 1 ⊢ x ∈ A, conj_eliml 2.
4. ⊢ x ∈ A ∩ B → x ∈ A, subj_intro 3.
5. ⊢ ∀x. x ∈ A ∩ B → x ∈ A, uq_intro 4.
6. ⊢ (∀x. x ∈ A ∩ B → x ∈ A) → A ∩ B ⊆ A, incl_intro.
intersection_incl_left. ⊢ A ∩ B ⊆ A, subj_elim 6 5.

7. 1 ⊢ x ∈ B, conj_elimr 2.
8. ⊢ x ∈ A ∩ B → x ∈ B, subj_intro 7.
9. ⊢ ∀x. x ∈ A ∩ B → x ∈ B, uq_intro 8.
10. ⊢ (∀x. x ∈ A ∩ B → x ∈ B) → A ∩ B ⊆ B, incl_intro.
intersection_incl_right. ⊢ A ∩ B ⊆ B, subj_elim 10 9.

1. ⊢ x = y → x = u → y = u, eq_subst.
2. ⊢ x = y → x = x → y = x, 1.
3. 3 ⊢ x = y, basic.
4. 3 ⊢ x = x → y = x, subj_elim 2 3.
5. 3 ⊢ y = x, subj_elim 4 eq_refl.
eq_symm. ⊢ x = y → y = x, subj_intro 5.

eq_subst_rule. (H1 ⊢ x = y) → (H2 ⊢ P x) → (H1 ∧ H2 ⊢ P y),
  lift_impl_ii eq_subst.
eq_symm_rule. (H ⊢ x = y) → (H ⊢ y = x), lift_impl eq_symm.

1. 1 ⊢ y = x, basic.
2. 1 ⊢ x = y, eq_symm_rule 1.
3. 1 ⊢ P x → P y, subj_elim eq_subst 2.
4. ⊢ y = x → P x → P y, subj_intro 3.
eq_subst_rev. (H1 ⊢ y = x) → (H2 ⊢ P x) → (H1 ∧ H2 ⊢ P y),
  lift_impl_ii 4.

1. ⊢ u ∈ {x | P x} ↔ set u ∧ P u, comp.
2. ⊢ u ∈ {x | P x} → set u ∧ P u, bij_eliml 1.
comp_unfold. (H ⊢ u ∈ {x | P x}) → (H ⊢ set u ∧ P u), lift_impl 2.

1. ⊢ u ∈ {x | P x} ↔ set u ∧ P u, comp.
2. ⊢ set u ∧ P u → u ∈ {x | P x}, bij_elimr 1.
comp_fold. (H ⊢ set u ∧ P u) → (H ⊢ u ∈ {x | P x}), lift_impl 2.

1. 1 ⊢ A ↔ ¬A, basic.
2. 1 ⊢ A → ¬A, bij_eliml 1.
3. 3 ⊢ A, basic.
4. 1, 3 ⊢ ¬A, subj_elim 2 3.
5. 1, 3 ⊢ ⊥, neg_elim 4 3.
6. 1 ⊢ ¬A, neg_intro 5.
7. 1 ⊢ ¬A → A, bij_elimr 1.
8. 1 ⊢ A, subj_elim 7 6.
9. 1 ⊢ ⊥, neg_elim 6 8.
diag_contra. ⊢ ¬(A ↔ ¬A), neg_intro 9.

# Russell's paradox.

1. 1 ⊢ R = {x | ¬x ∈ x}, basic.
2. 2 ⊢ u ∈ R, basic.
3. 1, 2 ⊢ u ∈ {x | ¬x ∈ x}, eq_subst_rule 1 2.
4. 1, 2 ⊢ set u ∧ ¬u ∈ u, comp_unfold 3.
5. 1, 2 ⊢ ¬u ∈ u, conj_elimr 4.
6. 1 ⊢ u ∈ R → ¬u ∈ u, subj_intro 5.
7. 1 ⊢ R ∈ R → ¬R ∈ R, 6.

8. 8 ⊢ set R, basic.
9. 9 ⊢ ¬R ∈ R, basic.
10. 8, 9 ⊢ set R ∧ ¬R ∈ R, conj_intro 8 9.
11. 8, 9 ⊢ R ∈ {x | ¬x ∈ x}, comp_fold 10.
12. 1, 8, 9 ⊢ R ∈ R, eq_subst_rev 1 11, P x ↔ R ∈ x.
13. 1, 8 ⊢ ¬R ∈ R → R ∈ R, subj_intro 12.

14. 1, 8 ⊢ R ∈ R ↔ ¬R ∈ R, bij_intro 7 13.
15. ⊢ ¬(R ∈ R ↔ ¬R ∈ R), diag_contra.
16. 1, 8 ⊢ ⊥, neg_elim 15 14.
17. 1 ⊢ ¬set R, neg_intro 16.
18. ⊢ R = {x | ¬x ∈ x} → ¬set R, subj_intro 17.
