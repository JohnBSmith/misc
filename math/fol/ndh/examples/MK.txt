
# Morse-Kelly set theory.

# DEFINITIONS

incl_equi. ⊢ A ⊆ B ↔ ∀x. x ∈ A → x ∈ B, def.
set_equi. ⊢ set x ↔ ∃C. x ∈ C, def.
empty_set_eq. ⊢ ∅ = {x | ⊥}, def.
union_eq. ⊢ A ∪ B = {x | x ∈ A ∨ x ∈ B}, def.
sg_eq. ⊢ {a} = {x | set a → x = a}, def.
pair_eq. ⊢ (x, y) = {{x}, {x, y}}, def.
# {x, y} is syntactic sugar for {x} ∪ {y}.

power_eq. ⊢ power M = {A | A ⊆ M}, def.
intersection_eq. ⊢ A ∩ B = {x | x ∈ A ∧ x ∈ B}, def.
diff_eq. ⊢ A \ B = {x | x ∈ A ∧ ¬x ∈ B}, def.
Union_eq. ⊢ ⋃M = {x | ∃A. A ∈ M ∧ x ∈ A}, def.
Intersection_eq. ⊢ ⋂M = {x | ∀A. A ∈ M → x ∈ A}, def.
prod_eq. ⊢ A × B =
  {t | ∃x. ∃y. x ∈ A ∧ y ∈ B ∧ t = (x, y)}, def.
UnivCl_eq. ⊢ UnivCl = {x | x = x}, def.
DiagCl_eq. ⊢ DiagCl = {x | ¬x ∈ x}, def.

dom_eq. ⊢ dom R = {x | ∃y. (x, y) ∈ R}, def.
rng_eq. ⊢ rng R = {y | ∃x. (x, y) ∈ R}, def.
img_eq. ⊢ img R A = {y | ∃x. x ∈ A ∧ (x, y) ∈ R}, def.
inv_img_eq. ⊢ inv_img R B = {x | ∃y. y ∈ B ∧ (x, y) ∈ R}, def.
app_eq. ⊢ app f x = ⋂{y | (x, y) ∈ f}, def.

relation_equi. ⊢ relation R ↔ ∀t. t ∈ R → ∃x. ∃y. t = (x, y), def.
function_equi. ⊢ function f ↔ relation f ∧
  ∀x. ∀y1. ∀y2. (x, y1) ∈ f → (x, y2) ∈ f → y1 = y2, def.
map_equi. ⊢ map f X Y ↔ function f ∧ dom f = X ∧ rng f ⊆ Y, def.
inj_equi. ⊢ inj f X Y ↔ map f X Y ∧ ∀a. ∀b.
  a ∈ X → b ∈ X → app f a = app f b → a = b, def.
sur_equi. ⊢ sur f X Y ↔ map f X Y ∧ rng f = Y, def.
bij_equi. ⊢ bij f X Y ↔ inj f X Y ∧ sur f X Y, def.
inv_eq. ⊢ inv f = {t | ∃x. ∃y. t = (y, x) ∧ (x, y) ∈ f}, def.
restr_eq. ⊢ restr f A = f ∩ (A × UnivCl), def.
choice_function_equi. ⊢ choice_function f ↔
  function f ∧ ∀x. x ∈ dom f → app f x ∈ x, def.
composition_eq. ⊢ composition g f = {t | ∃x. ∃y. ∃z.
  t = (x, z) ∧ (x, y) ∈ f ∧ (y, z) ∈ g}, def.

# AXIOMS

lem. ⊢ A ∨ ¬A, axiom.
eq_refl. ⊢ x = x, axiom.
eq_subst. ⊢ x = y → P x → P y, axiom.

ext. ⊢ (∀x. x ∈ A ↔ x ∈ B) → A = B, axiom.
comp. ⊢ u ∈ {x | P x} ↔ set u ∧ P u, axiom.
pairing. ⊢ set x → set y → set {x, y}, axiom.
subset. ⊢ A ⊆ B → set B → set A, axiom.
power. ⊢ set M → set (power M), axiom.
union. ⊢ set M → set (⋃M), axiom.
regularity. ⊢ ¬A = ∅ → ∃x. x ∈ A ∧ x ∩ A = ∅, axiom.
infinity. ⊢ ∃A. ∅ ∈ A ∧ ∀x. x ∈ A → x ∪ {x} ∈ A, axiom.
substitution. ⊢ function f → set (dom f) → set (rng f), axiom.
choice. ⊢ ∃f. choice_function f ∧ dom f = UnivCl \ {∅}, axiom.

# LEMMAS

1. 1 ⊢ x = y, hypo.
2. 1 ⊢ y = x, eq_subst 1 eq_refl, P u ↔ u = x.
eq_symm. ⊢ x = y → y = x, subj_intro 2.

1. 1 ⊢ y = x, hypo.
2. 1 ⊢ x = y, eq_symm 1.
3. 1 ⊢ P x → P y, subj_elim eq_subst 2.
eq_subst_rev. ⊢ y = x → P x → P y, subj_intro 3.

incl_elim. ⊢ A ⊆ B → (∀x. x ∈ A → x ∈ B), bij_eliml incl_equi.
incl_intro. ⊢ (∀x. x ∈ A → x ∈ B) → A ⊆ B, bij_elimr incl_equi.

1. ⊢ u ∈ {x | P x} ↔ set u ∧ P u, comp.
comp_elim. ⊢ u ∈ {x | P x} → set u ∧ P u, bij_eliml 1.

1. ⊢ u ∈ {x | P x} ↔ set u ∧ P u, comp.
comp_intro. ⊢ set u ∧ P u → u ∈ {x | P x}, bij_elimr 1.

# EXAMPLES

1. 1 ⊢ x ∈ A, hypo.
2. ⊢ x ∈ A → x ∈ A, subj_intro 1.
3. ⊢ ∀x. x ∈ A → x ∈ A, uq_intro 2.
incl_refl. ⊢ A ⊆ A, incl_intro 3.

1. 1 ⊢ A ⊆ B, hypo.
2. 2 ⊢ B ⊆ C, hypo.
3. 1 ⊢ ∀x. x ∈ A → x ∈ B, incl_elim 1.
4. 1 ⊢ x ∈ A → x ∈ B, uq_elim 3.
5. 2 ⊢ ∀x. x ∈ B → x ∈ C, incl_elim 2.
6. 2 ⊢ x ∈ B → x ∈ C, uq_elim 5.
7. 7 ⊢ x ∈ A, hypo.
8. 1, 7 ⊢ x ∈ B, subj_elim 4 7.
9. 2, 1, 7 ⊢ x ∈ C, subj_elim 6 8.
10. 2, 1 ⊢ x ∈ A → x ∈ C, subj_intro 9.
11. 2, 1 ⊢ ∀x. x ∈ A → x ∈ C, uq_intro 10.
12. 1, 2 ⊢ A ⊆ C, incl_intro 11.
incl_trans. ⊢ A ⊆ B → B ⊆ C → A ⊆ C, subj_intro_ii 12.

1. 1 ⊢ A ⊆ B, hypo.
2. 1 ⊢ ∀x. x ∈ A → x ∈ B, incl_elim 1.
3. 1 ⊢ x ∈ A → x ∈ B, uq_elim 2.
4. 4 ⊢ B ⊆ A, hypo.
5. 4 ⊢ ∀x. x ∈ B → x ∈ A, incl_elim 4.
6. 4 ⊢ x ∈ B → x ∈ A, uq_elim 5.
7. 1, 4 ⊢ x ∈ A ↔ x ∈ B, bij_intro 3 6.
8. 1, 4 ⊢ ∀x. x ∈ A ↔ x ∈ B, uq_intro 7.
9. 1, 4 ⊢ A = B, subj_elim ext 8.
incl_antisym. ⊢ A ⊆ B → B ⊆ A → A = B, subj_intro_ii 9.

1. 1 ⊢ x ∈ A ∩ B, hypo.
2. 1 ⊢ x ∈ {x | x ∈ A ∧ x ∈ B}, eq_subst intersection_eq 1, P X ↔ x ∈ X.
3. 1 ⊢ set x ∧ (x ∈ A ∧ x ∈ B), comp_elim 2.
4. 1 ⊢ x ∈ A ∧ x ∈ B, conj_elimr 3.
intersection_elim. ⊢ x ∈ A ∩ B → x ∈ A ∧ x ∈ B, subj_intro 4.

1. 1 ⊢ x ∈ A ∩ B, hypo.
2. 1 ⊢ x ∈ A ∧ x ∈ B, intersection_elim 1.
3. 1 ⊢ x ∈ A, conj_eliml 2.
4. ⊢ x ∈ A ∩ B → x ∈ A, subj_intro 3.
5. ⊢ ∀x. x ∈ A ∩ B → x ∈ A, uq_intro 4.
intersection_incl_left. ⊢ A ∩ B ⊆ A, incl_intro 5.

6. 1 ⊢ x ∈ B, conj_elimr 2.
7. ⊢ x ∈ A ∩ B → x ∈ B, subj_intro 6.
8. ⊢ ∀x. x ∈ A ∩ B → x ∈ B, uq_intro 7.
intersection_incl_right. ⊢ A ∩ B ⊆ B, incl_intro 8.

1. 1 ⊢ A ↔ ¬A, hypo.
2. 1 ⊢ A → ¬A, bij_eliml 1.
3. 3 ⊢ A, hypo.
4. 1, 3 ⊢ ¬A, subj_elim 2 3.
5. 1, 3 ⊢ ⊥, neg_elim 4 3.
6. 1 ⊢ ¬A, neg_intro 5.
7. 1 ⊢ ¬A → A, bij_elimr 1.
8. 1 ⊢ A, subj_elim 7 6.
9. 1 ⊢ ⊥, neg_elim 6 8.
diag_contra. ⊢ ¬(A ↔ ¬A), neg_intro 9.

# Russell's paradox.

1. 1 ⊢ R = {x | ¬x ∈ x}, hypo.
2. 2 ⊢ u ∈ R, hypo.
3. 1, 2 ⊢ u ∈ {x | ¬x ∈ x}, eq_subst 1 2.
4. 1, 2 ⊢ set u ∧ ¬u ∈ u, comp_elim 3.
5. 1, 2 ⊢ ¬u ∈ u, conj_elimr 4.
6. 1 ⊢ u ∈ R → ¬u ∈ u, subj_intro 5.
7. 1 ⊢ R ∈ R → ¬R ∈ R, 6.

8. 8 ⊢ set R, hypo.
9. 9 ⊢ ¬R ∈ R, hypo.
10. 8, 9 ⊢ set R ∧ ¬R ∈ R, conj_intro 8 9.
11. 8, 9 ⊢ R ∈ {x | ¬x ∈ x}, comp_intro 10.
12. 1, 8, 9 ⊢ R ∈ R, eq_subst_rev 1 11, P x ↔ R ∈ x.
13. 1, 8 ⊢ ¬R ∈ R → R ∈ R, subj_intro 12.

14. 1, 8 ⊢ R ∈ R ↔ ¬R ∈ R, bij_intro 7 13.
15. ⊢ ¬(R ∈ R ↔ ¬R ∈ R), diag_contra.
16. 1, 8 ⊢ ⊥, neg_elim 15 14.
17. 1 ⊢ ¬set R, neg_intro 16.
18. ⊢ R = {x | ¬x ∈ x} → ¬set R, subj_intro 17.
