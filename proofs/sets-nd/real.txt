
(*/chapter The real numbers *)

(*/section Axiomatic definition *)

0. ⊢ ℝ = _, def.
0. ⊢ a + b = _, def.
0. ⊢ a⋅b = _, def.
0. ⊢ -a = _, def.
rsub_eq. ⊢ a - b = a + (-b), def.

real_is_set. ⊢ set ℝ, axiom.
radd_closed. ⊢ a ∈ ℝ → b ∈ ℝ → a + b ∈ ℝ, axiom.
rmul_closed. ⊢ a ∈ ℝ → b ∈ ℝ → a⋅b ∈ ℝ, axiom.
rneg_closed. ⊢ a ∈ ℝ → -a ∈ ℝ, axiom.

radd_comm. ⊢ a ∈ ℝ → b ∈ ℝ →
  a + b = b + a, axiom.
rmul_comm. ⊢ a ∈ ℝ → b ∈ ℝ →
  a⋅b = b⋅a, axiom.
radd_neutr. ⊢ a ∈ ℝ → a + 0 = a, axiom.
radd_inv. ⊢ a ∈ ℝ → a + (-a) = 0, axiom.
radd_assoc. ⊢ a ∈ ℝ → b ∈ ℝ → c ∈ ℝ →
  (a + b) + c = a + (b + c), axiom.
rmul_assoc. ⊢ a ∈ ℝ → b ∈ ℝ → c ∈ ℝ →
  (a⋅b)⋅c = a⋅(b⋅c), axiom.
rmul_distl_add. ⊢ a ∈ ℝ → b ∈ ℝ → c ∈ ℝ →
  a⋅(b + c) = a⋅b + a⋅c, axiom.


(*/section Basic results *)

01. 1 ⊢ a ∈ ℝ, hypo.
02. 2 ⊢ b ∈ ℝ, hypo.
03. 2 ⊢ -b ∈ ℝ, rneg_closed 2.
04. 1, 2 ⊢ a + -b ∈ ℝ, radd_closed 1 3.
05. 1, 2 ⊢ a - b ∈ ℝ,
  eq_subst_rev rsub_eq 4, P t ↔ t ∈ ℝ.
rsub_closed. ⊢ a ∈ ℝ → b ∈ ℝ → a - b ∈ ℝ,
  subj_intro_ii 5.

01. 1 ⊢ a ∈ ℝ, hypo.
02. ⊢ 0 ∈ ℝ, calc.
03. 1 ⊢ a + 0 = a, radd_neutr 1.
04. 1 ⊢ 0 + a = a + 0, radd_comm 2 1.
05. 1 ⊢ 0 + a = a, eq_trans 4 3.
radd_neutl. ⊢ a ∈ ℝ → 0 + a = a, subj_intro 5.

01. 1 ⊢ a ∈ ℝ, hypo.
02. 2 ⊢ b ∈ ℝ, hypo.
03. 3 ⊢ c ∈ ℝ, hypo.
04. 1, 2 ⊢ a + b ∈ ℝ, radd_closed 1 2.
05. 1, 2, 3 ⊢ (a + b)⋅c = c⋅(a + b), rmul_comm 4 3.
06. 1, 2, 3 ⊢ c⋅(a + b) = c⋅a + c⋅b, rmul_distl_add 3 1 2.
07. 1, 3 ⊢ c⋅a = a⋅c, rmul_comm 3 1.
08. 2, 3 ⊢ c⋅b = b⋅c, rmul_comm 3 2.
09. 1, 2, 3 ⊢ c⋅(a + b) = a⋅c + c⋅b, eq_subst 7 6,
  P t ↔ c⋅(a + b) = t + c⋅b.
10. 1, 2, 3 ⊢ c⋅(a + b) = a⋅c + b⋅c, eq_subst 8 9,
  P t ↔ c⋅(a + b) = a⋅c + t.
11. 1, 2, 3 ⊢ (a + b)⋅c = a⋅c + b⋅c, eq_trans 5 10.
rmul_distr_add. ⊢ a ∈ ℝ → b ∈ ℝ → c ∈ ℝ →
  (a + b)⋅c = a⋅c + b⋅c, subj_intro_iii 11.

01. 1 ⊢ a ∈ ℝ, hypo.
02. ⊢ 0 ∈ ℝ, calc.
03. ⊢ 0 + 0 = 0, radd_neutr 2.
04. ⊢ a⋅(0 + 0) = a⋅0, f_equal 3, f t = a⋅t.
05. 1 ⊢ a⋅(0 + 0) = a⋅0 + a⋅0, rmul_distl_add 1 2 2.
06. 1 ⊢ a⋅0 = a⋅0 + a⋅0, eq_symm_trans 4 5.
07. 1 ⊢ a⋅0 + -(a⋅0) = a⋅0 + a⋅0 + -(a⋅0),
  f_equal 6, f t = t + -(a⋅0).
08. 1 ⊢ a⋅0 ∈ ℝ, rmul_closed 1 2.
09. 1 ⊢ -(a⋅0) ∈ ℝ, rneg_closed 8.
10. 1 ⊢ a⋅0 + -(a⋅0) = 0, radd_inv 8.
11. 1 ⊢ 0 = a⋅0 + a⋅0 + -(a⋅0), eq_symm_trans 10 7.
12. 1 ⊢ a⋅0 + a⋅0 + -(a⋅0) = a⋅0 + (a⋅0 + -(a⋅0)),
  radd_assoc 8 8 9.
13. 1 ⊢ 0 = a⋅0 + (a⋅0 + -(a⋅0)), eq_trans 11 12.
14. 1 ⊢ 0 = a⋅0 + 0, eq_subst 10 13, P t ↔ 0 = a⋅0 + t.
15. 1 ⊢ a⋅0 + 0 = a⋅0, radd_neutr 8.
16. 1 ⊢ 0 = a⋅0, eq_trans 14 15.
17. 1 ⊢ a⋅0 = 0, eq_symm 16.
rmul_zero. ⊢ a ∈ ℝ → a⋅0 = 0, subj_intro 17.

01. 1 ⊢ a ∈ ℝ, hypo.
02. 2 ⊢ b ∈ ℝ, hypo.
03. ⊢ 0 ∈ ℝ, calc.
04. 1 ⊢ a⋅0 = 0, rmul_zero 1.
05. 2 ⊢ b + -b = 0, radd_inv 2.
06. 2 ⊢ a⋅(b + -b) = a⋅0, f_equal 5, f t = a⋅t.
07. 1, 2 ⊢ a⋅(b + -b) = 0, eq_trans 6 4.
08. 2 ⊢ -b ∈ ℝ, rneg_closed 2.
09. 1, 2 ⊢ a⋅(b + -b) = a⋅b + a⋅(-b), rmul_distl_add 1 2 8.
10. 1, 2 ⊢ 0 = a⋅b + a⋅(-b), eq_symm_trans 7 9.
11. 1, 2 ⊢ 0 + -(a⋅b) = a⋅b + a⋅(-b) + -(a⋅b),
  f_equal 10, f t = t + -(a⋅b).
12. 1, 2 ⊢ a⋅b ∈ ℝ, rmul_closed 1 2.
13. 1, 2 ⊢ -(a⋅b) ∈ ℝ, rneg_closed 12.
14. 1, 2 ⊢ 0 + -(a⋅b) = -(a⋅b), radd_neutl 13.
15. 1, 2 ⊢ -(a⋅b) = a⋅b  + a⋅(-b) + -(a⋅b),
  eq_symm_trans 14 11.
16. 1, 2 ⊢ a⋅(-b) ∈ ℝ, rmul_closed 1 8.
17. 1, 2 ⊢ a⋅b + a⋅(-b) = a⋅(-b) + a⋅b, radd_comm 12 16.
18. 1, 2 ⊢ -(a⋅b) = a⋅(-b) + a⋅b + -(a⋅b),
  eq_subst 17 15, P t ↔ -(a⋅b) = t + -(a⋅b).
19. 1, 2 ⊢ a⋅(-b) + a⋅b + -(a⋅b) = a⋅(-b) + (a⋅b + -(a⋅b)),
  radd_assoc 16 12 13.
20. 1, 2 ⊢ -(a⋅b) = a⋅(-b) + (a⋅b + -(a⋅b)), eq_trans 18 19.
21. 1, 2 ⊢ a⋅b + -(a⋅b) = 0, radd_inv 12.
22. 1, 2 ⊢ -(a⋅b) = a⋅(-b) + 0,
  eq_subst 21 20, P t ↔ -(a⋅b) = a⋅(-b) + t.
23. 1, 2 ⊢ a⋅(-b) + 0 = a⋅(-b), radd_neutr 16.
24. 1, 2 ⊢ -(a⋅b) = a⋅(-b), eq_trans 22 23.
rmul_compatr_neg. ⊢ a ∈ ℝ → b ∈ ℝ → -(a⋅b) = a⋅(-b),
  subj_intro_ii 24.

01. 1 ⊢ a ∈ ℝ, hypo.
02. 2 ⊢ b ∈ ℝ, hypo.
03. 3 ⊢ c ∈ ℝ, hypo.
04. ⊢ b - c = b + (-c), rsub_eq.
05. ⊢ a⋅(b - c) = a⋅(b + (-c)), f_equal 4, f x = a⋅x.
06. 3 ⊢ -c ∈ ℝ, rneg_closed 3.
07. 1, 2, 3 ⊢ a⋅(b + (-c)) = a⋅b + a⋅(-c),
  rmul_distl_add 1 2 6.
08. 1, 2, 3 ⊢ a⋅(b - c) = a⋅b + a⋅(-c), eq_trans 5 7.
09. 1, 3 ⊢ -(a⋅c) = a⋅(-c), rmul_compatr_neg 1 3.
10. 1, 2, 3 ⊢ a⋅(b - c) = a⋅b + -(a⋅c),
  eq_subst_rev 9 8, P t ↔ a⋅(b - c) = a⋅b + t.
11. ⊢ a⋅b - a⋅c = a⋅b + -(a⋅c), rsub_eq.
12. ⊢ a⋅b + -(a⋅c) = a⋅b - a⋅c, eq_symm 11.
13. 1, 2, 3 ⊢ a⋅(b - c) = a⋅b - a⋅c, eq_trans 10 12.
rmul_distl_sub. ⊢ a ∈ ℝ → b ∈ ℝ → c ∈ ℝ →
  a⋅(b - c) = a⋅b - a⋅c, subj_intro_iii 13.

01. 1 ⊢ a ∈ ℝ, hypo.
02. 2 ⊢ b ∈ ℝ, hypo.
03. 3 ⊢ c ∈ ℝ, hypo.
04. 1, 2 ⊢ a - b ∈ ℝ, rsub_closed 1 2.
05. 1, 2, 3 ⊢ (a - b)⋅c = c⋅(a - b), rmul_comm 4 3.
06. 1, 2, 3 ⊢ c⋅(a - b) = c⋅a - c⋅b, rmul_distl_sub 3 1 2.
07. 1, 3 ⊢ c⋅a = a⋅c, rmul_comm 3 1.
08. 2, 3 ⊢ c⋅b = b⋅c, rmul_comm 3 2.
09. 1, 3 ⊢ c⋅a - c⋅b = a⋅c - c⋅b, f_equal 7, f t = t - c⋅b.
10. 1, 2, 3 ⊢ c⋅a - c⋅b = a⋅c - b⋅c, eq_subst 8 9,
  P t ↔ c⋅a - c⋅b = a⋅c - t.
11. 1, 2, 3 ⊢ (a - b)⋅c = c⋅a - c⋅b, eq_trans 5 6.
12. 1, 2, 3 ⊢ (a - b)⋅c = a⋅c - b⋅c, eq_trans 11 10.
rmul_distr_sub. ⊢ a ∈ ℝ → b ∈ ℝ → c ∈ ℝ →
  (a - b)⋅c = a⋅c - b⋅c, subj_intro_iii 12.

