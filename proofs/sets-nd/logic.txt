
# Propositional logic

01. 1 ⊢ ⊥, hypo.
02. 2 ⊢ ¬A, hypo.
03. 1, 2 ⊢ ⊥, wk 1.
04. 1 ⊢ ¬¬A, neg_intro 3.
05. 1 ⊢ A, dne 4.
efq. ⊢ ⊥ → A, subj_intro 5.

01. 1 ⊢ ¬(A ∨ ¬A), hypo.
02. 2 ⊢ A, hypo.
03. 2 ⊢ A ∨ ¬A, disj_introl 2.
04. 1, 2 ⊢ ⊥, neg_elim 1 3.
05. 1 ⊢ ¬A, neg_intro 4.
06. 1 ⊢ A ∨ ¬A, disj_intror 5.
07. 1 ⊢ ⊥, neg_elim 1 6.
08. ⊢ ¬¬(A ∨ ¬A), neg_intro 7.
lem. ⊢ A ∨ ¬A, dne 8.

01. 1 ⊢ A ↔ ¬A, hypo.
02. 1 ⊢ A → ¬A, bij_eliml 1.
03. 3 ⊢ A, hypo.
04. 1, 3 ⊢ ¬A, subj_elim 2 3.
05. 1, 3 ⊢ ⊥, neg_elim 4 3.
06. 1 ⊢ ¬A, neg_intro 5.
07. 1 ⊢ ¬A → A, bij_elimr 1.
08. 1 ⊢ A, subj_elim 7 6.
09. 1 ⊢ ⊥, neg_elim 6 8.
diag_contra. ⊢ ¬(A ↔ ¬A), neg_intro 9.

01. 1 ⊢ A, hypo.
02. 2 ⊢ ¬A, hypo.
03. 1, 2 ⊢ ⊥, neg_elim 2 1.
04. 1 ⊢ ¬¬A, neg_intro 3.
dn_intro. ⊢ A → ¬¬A, subj_intro 4.

01. 1 ⊢ ¬B, hypo.
02. 2 ⊢ A → B, hypo.
03. 3 ⊢ A, hypo.
04. 2, 3 ⊢ B, subj_elim 2 3.
05. 1, 2, 3 ⊢ ⊥, neg_elim 1 4.
06. 2, 1 ⊢ ¬A, neg_intro 5.
07. 2 ⊢ ¬B → ¬A, subj_intro 6.
contraposition. ⊢ (A → B) → ¬B → ¬A, subj_intro 7.

01. 1 ⊢ ¬A → ¬B, hypo.
02. 1 ⊢ ¬¬B → ¬¬A, contraposition 1.
03. 3 ⊢ B, hypo.
04. 3 ⊢ ¬¬B, dn_intro 3.
05. 1, 3 ⊢ ¬¬A, subj_elim 2 4.
06. 1, 3 ⊢ A, dne 5.
07. 1 ⊢ B → A, subj_intro 6.
contraposition_rev. ⊢ (¬A → ¬B) → (B → A), subj_intro 7.

# Logic with equality

01. 1 ⊢ x = y, hypo.
02. 1 ⊢ y = x, eq_subst 1 eq_refl, P u ↔ u = x.
eq_symm. ⊢ x = y → y = x, subj_intro 2.

01. 1 ⊢ y = x, hypo.
02. 1 ⊢ x = y, eq_symm 1.
03. 1 ⊢ P x → P y, subj_elim eq_subst 2.
eq_subst_rev. ⊢ y = x → P x → P y, subj_intro 3.

01. 1 ⊢ x = y, hypo.
02. ⊢ f x = f x, eq_refl.
03. 1 ⊢ f x = f y, eq_subst 1 2, P u ↔ f x = f u.
f_equal. ⊢ x = y → f x = f y, subj_intro 3.

01. 1 ⊢ x = y, hypo.
02. 2 ⊢ y = z, hypo.
03. 1 ⊢ y = x, eq_symm 1.
04. 1, 2 ⊢ x = z, eq_subst 3 2, P u ↔ u = z.
05. 1 ⊢ y = z → x = z, subj_intro 4.
eq_trans. ⊢ x = y → y = z → x = z, subj_intro 5.
