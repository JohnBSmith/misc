
(*/chapter Classical logic *)

(*/section Inference rules *)

(*/rules hypo conj_intro conj_eliml conj_elimr disj_introl disj_intror
disj_elim subj_intro subj_elim neg_intro neg_elim bij_intro bij_eliml
bij_elimr wk exch uq_intro uq_elim ex_intro ex_elim subj_intro_ii
subj_intro_iii subj_intro_iv *)

hypo. (⊤ ∧ A ⊢ A), axiom.
conj_intro. (H1 ⊢ A) → (H2 ⊢ B) → (H1 ∧ H2 ⊢ A ∧ B), axiom.
conj_eliml. (H ⊢ A ∧ B) → (H ⊢ A), axiom.
conj_elimr. (H ⊢ A ∧ B) → (H ⊢ B), axiom.
disj_introl. (H ⊢ A) → (H ⊢ A ∨ B), axiom.
disj_intror. (H ⊢ B) → (H ⊢ A ∨ B), axiom.
disj_elim. (H1 ⊢ A ∨ B) → (H2 ∧ A ⊢ C) → (H3 ∧ B ⊢ C) →
  (H1 ∧ H2 ∧ H3 ⊢ C), axiom.
subj_intro. (H ∧ A ⊢ B) → (H ⊢ A → B), axiom.
subj_elim. (H1 ⊢ A → B) → (H2 ⊢ A) → (H1 ∧ H2 ⊢ B), axiom.
neg_intro. (H ∧ A ⊢ ⊥) → (H ⊢ ¬A), axiom.
neg_elim. (H1 ⊢ ¬A) → (H2 ⊢ A) → (H1 ∧ H2 ⊢ ⊥), axiom.
bij_intro. (H1 ⊢ A → B) → (H2 ⊢ B → A) → (H1 ∧ H2 ⊢ A ↔ B), axiom.
bij_eliml. (H ⊢ A ↔ B) → (H ⊢ A → B), axiom.
bij_elimr. (H ⊢ A ↔ B) → (H ⊢ B → A), axiom.
wk. (H ⊢ B) → (H ∧ A ⊢ B), axiom.
exch. (H ⊢ A) → (H ⊢ A), axiom.
uq_intro. (nf u (H ∧ ∀x. A x)) → (H ⊢ A u) → (H ⊢ ∀x. A x), axiom.
uq_elim. (H ⊢ ∀x. A x) → (H ⊢ A t), axiom.
ex_intro. (H ⊢ A t) → (H ⊢ ∃x. A x), axiom.
ex_elim. (nf u (H1 ∧ H2 ∧ B ∧ ∃x. A x)) →
  (H1 ⊢ ∃x. A x) → (H2 ∧ A u ⊢ B) → (H1 ∧ H2 ⊢ B), axiom.
subj_intro_ii. (H ∧ A ∧ B ⊢ C) → (H ⊢ A → B → C), axiom.
subj_intro_iii. (H ∧ A ∧ B ∧ C ⊢ D) → (H ⊢ A → B → C → D), axiom.
subj_intro_iv. (H ∧ A ∧ B ∧ C ∧ D ⊢ E) → (H ⊢ A → B → C → D → E), axiom.

(*/section Propositional logic *)

(*/subsection The relationship of EFQ, LEM, DNE *)

01. 1 ⊢ ¬¬A, hypo.
02. ⊢ A ∨ ¬A, lem.
03. 3 ⊢ A, hypo.
04. 4 ⊢ ¬A, hypo.
05. 1, 4 ⊢ ⊥, neg_elim 1 4.
06. 1, 4 ⊢ A, efq 5.
07. 1 ⊢ A, disj_elim 2 3 6.
dne. ⊢ ¬¬A → A, subj_intro 7.

01. 1 ⊢ ¬¬A → A, hypo.
02. 2 ⊢ ⊥, hypo.
03. 3 ⊢ ¬A, hypo.
04. 2, 3 ⊢ ⊥, wk 2.
05. 2 ⊢ ¬¬A, neg_intro 4.
06. 1, 2 ⊢ A, subj_elim 1 5.
efq_from_dne. ⊢ (¬¬A → A) → (⊥ → A), subj_intro_ii 6.

01. 1 ⊢ ¬(A ∨ ¬A), hypo.
02. 2 ⊢ A, hypo.
03. 2 ⊢ A ∨ ¬A, disj_introl 2.
04. 1, 2 ⊢ ⊥, neg_elim 1 3.
05. 1 ⊢ ¬A, neg_intro 4.
06. 1 ⊢ A ∨ ¬A, disj_intror 5.
07. 1 ⊢ ⊥, neg_elim 1 6.
08. ⊢ ¬¬(A ∨ ¬A), neg_intro 7.
lem_from_dne. ⊢ A ∨ ¬A, dne 8.

(*/subsection Useful theorems *)

01. 1 ⊢ A ↔ ¬A, hypo.
02. 1 ⊢ A → ¬A, bij_eliml 1.
03. 3 ⊢ A, hypo.
04. 1, 3 ⊢ ¬A, subj_elim 2 3.
05. 1, 3 ⊢ ⊥, neg_elim 4 3.
06. 1 ⊢ ¬A, neg_intro 5.
07. 1 ⊢ ¬A → A, bij_elimr 1.
08. 1 ⊢ A, subj_elim 7 6.
09. 1 ⊢ ⊥, neg_elim 6 8.
diag_contra. ⊢ ¬(A ↔ ¬A), neg_intro 9.

01. 1 ⊢ A, hypo.
02. 2 ⊢ ¬A, hypo.
03. 1, 2 ⊢ ⊥, neg_elim 2 1.
04. 1 ⊢ ¬¬A, neg_intro 3.
dn_intro. ⊢ A → ¬¬A, subj_intro 4.

01. 1 ⊢ ¬B, hypo.
02. 2 ⊢ A → B, hypo.
03. 3 ⊢ A, hypo.
04. 2, 3 ⊢ B, subj_elim 2 3.
05. 1, 2, 3 ⊢ ⊥, neg_elim 1 4.
06. 2, 1 ⊢ ¬A, neg_intro 5.
07. 2 ⊢ ¬B → ¬A, subj_intro 6.
contraposition. ⊢ (A → B) → ¬B → ¬A, subj_intro 7.

01. 1 ⊢ ¬A → ¬B, hypo.
02. 1 ⊢ ¬¬B → ¬¬A, contraposition 1.
03. 3 ⊢ B, hypo.
04. 3 ⊢ ¬¬B, dn_intro 3.
05. 1, 3 ⊢ ¬¬A, subj_elim 2 4.
06. 1, 3 ⊢ A, dne 5.
07. 1 ⊢ B → A, subj_intro 6.
contraposition_rev. ⊢ (¬A → ¬B) → (B → A), subj_intro 7.

01. 1 ⊢ ¬A ∨ B, hypo.
02. 2 ⊢ A, hypo.
03. 3 ⊢ ¬A, hypo.
04. 2, 3 ⊢ ⊥, neg_elim 3 2.
05. 2, 3 ⊢ B, efq 4.
06. 6 ⊢ B, hypo.
07. 1, 2 ⊢ B, disj_elim 1 5 6.
08. 1 ⊢ A → B, subj_intro 7.
subj_from_disj. ⊢ (¬A ∨ B) → (A → B), subj_intro 8.

01. 1 ⊢ A ∨ B, hypo.
02. 2 ⊢ ¬B, hypo.
03. 3 ⊢ A, hypo.
04. 4 ⊢ B, hypo.
05. 2, 4 ⊢ ⊥, neg_elim 2 4.
06. 2, 4 ⊢ A, efq 5.
07. 1, 2 ⊢ A, disj_elim 1 3 6.
tollendo_ponens_left. ⊢ A ∨ B → ¬B → A, subj_intro_ii 7.

01. 1 ⊢ A ∨ B, hypo.
02. 2 ⊢ ¬A, hypo.
03. 3 ⊢ A, hypo.
04. 2, 3 ⊢ ⊥, neg_elim 2 3.
05. 2, 3 ⊢ B, efq 4.
06. 6 ⊢ B, hypo.
07. 1, 2 ⊢ B, disj_elim 1 5 6.
tollendo_ponens_right. ⊢ A ∨ B → ¬A → B, subj_intro_ii 7.

(*/subsection De Morgan's laws *)

01. 1 ⊢ ¬(A ∧ B), hypo.
02. ⊢ A ∨ ¬A, lem.
03. 3 ⊢ A, hypo.
04. 4 ⊢ B, hypo.
05. 3, 4 ⊢ A ∧ B, conj_intro 3 4.
06. 1, 3, 4 ⊢ ⊥, neg_elim 1 5.
07. 1, 3 ⊢ ¬B, neg_intro 6.
08. 1, 3 ⊢ ¬A ∨ ¬B, disj_intror 7.
09. 9 ⊢ ¬A, hypo.
10. 9 ⊢ ¬A ∨ ¬B, disj_introl 9.
11. 1 ⊢ ¬A ∨ ¬B, disj_elim 2 8 10.
neg_conj. ⊢ ¬(A ∧ B) → ¬A ∨ ¬B, subj_intro 11.

01. 1 ⊢ B, hypo.
02. 2 ⊢ A, hypo.
03. 1, 2 ⊢ B, wk 1.
04. 1 ⊢ A → B, subj_intro 3.
05. 5 ⊢ ¬(A → B), hypo.
06. 5, 1 ⊢ ⊥, neg_elim 5 4.
07. 5 ⊢ ¬B, neg_intro 6.

08. 8 ⊢ ¬A, hypo.
09. 9 ⊢ A, hypo.
10. 8, 9 ⊢ ⊥, neg_elim 8 9.
11. 8, 9 ⊢ B, efq 10.
12. 8 ⊢ A → B, subj_intro 11.
13. 5, 8 ⊢ ⊥, neg_elim 5 12.
14. 5 ⊢ ¬¬A, neg_intro 13.
15. 5 ⊢ A, dne 14.

16. 5 ⊢ A ∧ ¬B, conj_intro 15 7.
neg_subj. ⊢ ¬(A → B) → A ∧ ¬B, subj_intro 16.

(*/subsection Projections *)

01. 1 ⊢ A ∧ B ∧ C, hypo.
02. 1 ⊢ A ∧ B, conj_eliml 1.
03. 1 ⊢ A, conj_eliml 2.
conj_elimll. ⊢ A ∧ B ∧ C → A, subj_intro 3.

01. 1 ⊢ A ∧ B ∧ C, hypo.
02. 1 ⊢ A ∧ B, conj_eliml 1.
03. 1 ⊢ B, conj_elimr 2.
conj_elimlr. ⊢ A ∧ B ∧ C → B, subj_intro 3.

01. 1 ⊢ A ∧ B ∧ C ∧ D, hypo.
02. 1 ⊢ A ∧ B ∧ C, conj_eliml 1.
03. 1 ⊢ A ∧ B, conj_eliml 2.
04. 1 ⊢ A, conj_eliml 3.
conj_elimlll. ⊢ A ∧ B ∧ C ∧ D → A, subj_intro 4.

01. 1 ⊢ A ∧ B ∧ C ∧ D, hypo.
02. 1 ⊢ A ∧ B ∧ C, conj_eliml 1.
03. 1 ⊢ A ∧ B, conj_eliml 2.
04. 1 ⊢ B, conj_elimr 3.
conj_elimllr. ⊢ A ∧ B ∧ C ∧ D → B, subj_intro 4.

01. 1 ⊢ A ↔ B, hypo.
02. 1 ⊢ A → B, bij_eliml 1.
lsubj_elim. ⊢ (A ↔ B) → A → B, subj_intro 2.

01. 1 ⊢ A ↔ B, hypo.
02. 1 ⊢ B → A, bij_elimr 1.
rsubj_elim. ⊢ (A ↔ B) → B → A, subj_intro 2.

01. 1 ⊢ E ↔ A ∧ B, hypo.
02. 2 ⊢ E, hypo.
03. 1, 2 ⊢ A ∧ B, lsubj_elim 1 2.
04. 1, 2 ⊢ A, conj_eliml 3.
lsubj_conj_eliml. ⊢ (E ↔ A ∧ B) → E → A, subj_intro_ii 4.

01. 1 ⊢ E ↔ A ∧ B, hypo.
02. 2 ⊢ E, hypo.
03. 1, 2 ⊢ A ∧ B, lsubj_elim 1 2.
04. 1, 2 ⊢ B, conj_elimr 3.
lsubj_conj_elimr. ⊢ (E ↔ A ∧ B) → E → B, subj_intro_ii 4.

01. 1 ⊢ E ↔ A ∧ B ∧ C, hypo.
02. 2 ⊢ E, hypo.
03. 1, 2 ⊢ A ∧ B ∧ C, lsubj_elim 1 2.
04. 1, 2 ⊢ A, conj_elimll 3.
lsubj_conj_elimll. ⊢ (E ↔ A ∧ B ∧ C) → E → A, subj_intro_ii 4.

01. 1 ⊢ E ↔ A ∧ B ∧ C, hypo.
02. 2 ⊢ E, hypo.
03. 1, 2 ⊢ A ∧ B ∧ C, lsubj_elim 1 2.
04. 1, 2 ⊢ B, conj_elimlr 3.
lsubj_conj_elimlr. ⊢ (E ↔ A ∧ B ∧ C) → E → B, subj_intro_ii 4.

01. 1 ⊢ E ↔ A ∧ B ∧ C ∧ D, hypo.
02. 2 ⊢ E, hypo.
03. 1, 2 ⊢ A ∧ B ∧ C ∧ D, lsubj_elim 1 2.
04. 1, 2 ⊢ A, conj_elimlll 3.
lsubj_conj_elimlll. ⊢ (E ↔ A ∧ B ∧ C ∧ D) → E → A, subj_intro_ii 4.

01. 1 ⊢ E ↔ A ∧ B ∧ C ∧ D, hypo.
02. 2 ⊢ E, hypo.
03. 1, 2 ⊢ A ∧ B ∧ C ∧ D, lsubj_elim 1 2.
04. 1, 2 ⊢ B, conj_elimllr 3.
lsubj_conj_elimllr. ⊢ (E ↔ A ∧ B ∧ C ∧ D) → E → B, subj_intro_ii 4.

(*/section First order logic *)

(*/subsection Bounded quantification *)

01. 1 ⊢ ∀x. E x → P x, hypo.
02. 2 ⊢ E u, hypo.
03. 1 ⊢ E u → P u, uq_elim 1.
04. 1, 2 ⊢ P u, subj_elim 3 2.
uq_bounded_elim. ⊢ (∀x. E x → P x) → E u → P u, subj_intro_ii 4.

(*/subsection De Morgan's laws *)

01. 1 ⊢ ¬∃x. P x, hypo.
02. 2 ⊢ P x, hypo.
03. 2 ⊢ ∃x. P x, ex_intro 2.
04. 1, 2 ⊢ ⊥, neg_elim 1 3.
05. 1 ⊢ ¬P x, neg_intro 4.
06. 1 ⊢ ∀x. ¬P x, uq_intro 5.
neg_ex. ⊢ (¬∃x. P x) → (∀x. ¬P x), subj_intro 6.

01. 1 ⊢ ¬∀x. P x, hypo.
02. 2 ⊢ ¬∃x. ¬P x, hypo.
03. 2 ⊢ ∀x. ¬¬P x, neg_ex 2.
04. 2 ⊢ ¬¬P x, uq_elim 3.
05. 2 ⊢ P x, dne 4.
06. 2 ⊢ ∀x. P x, uq_intro 5.
07. 1, 2 ⊢ ⊥, neg_elim 1 6.
08. 1 ⊢ ¬¬∃x. ¬P x, neg_intro 7.
09. 1 ⊢ ∃x. ¬P x, dne 8.
neg_uq. ⊢ (¬∀x. P x) → (∃x. ¬P x), subj_intro 9.

01. 1 ⊢ ∃x. P x, hypo.
02. 2 ⊢ ∀x. ¬P x, hypo.
03. 3 ⊢ P u, hypo.
04. 2 ⊢ ¬P u, uq_elim 2.
05. 2, 3 ⊢ ⊥, neg_elim 4 3.
06. 2, 1 ⊢ ⊥, ex_elim 1 5.
07. 2 ⊢ ¬∃x. P x, neg_intro 6.
uq_neg. ⊢ (∀x. ¬P x) → (¬∃x. P x), subj_intro 7.

01. 1 ⊢ ∃x. ¬P x, hypo.
02. 2 ⊢ ¬P u, hypo.
03. 3 ⊢ ∀x. P x, hypo.
04. 3 ⊢ P u, uq_elim 3.
05. 3, 2 ⊢ ⊥, neg_elim 2 4.
06. 1, 3 ⊢ ⊥, ex_elim 1 5.
07. 1 ⊢ ¬∀x. P x, neg_intro 6.
ex_neg. ⊢ (∃x. ¬P x) → (¬∀x. P x), subj_intro 7.

01. 1 ⊢ ¬∀x. P x → Q x, hypo.
02. 1 ⊢ ∃x. ¬(P x → Q x), neg_uq 1.
03. 3 ⊢ ¬(P x → Q x), hypo.
04. 3 ⊢ P x ∧ ¬Q x, neg_subj 3.
05. 3 ⊢ ∃x. P x ∧ ¬Q x, ex_intro 4.
06. 1 ⊢ ∃x. P x ∧ ¬Q x, ex_elim 2 5.
neg_uq_bounded. ⊢ (¬∀x. P x → Q x) → (∃x. P x ∧ ¬Q x), subj_intro 6.

01. 1 ⊢ ¬∃x. P x ∧ Q x, hypo.
02. 1 ⊢ ∀x. ¬(P x ∧ Q x), neg_ex 1.
03. 1 ⊢ ¬(P x ∧ Q x), uq_elim 2.
04. 1 ⊢ ¬P x ∨ ¬Q x, neg_conj 3.
05. 1 ⊢ P x → ¬Q x, subj_from_disj 4.
06. 1 ⊢ ∀x. P x → ¬Q x, uq_intro 5.
neg_ex_bounded. ⊢ (¬∃x. P x ∧ Q x) → (∀x. P x → ¬Q x), subj_intro 6.


(*/section First order logic with equality *)

(*/subsection Useful theorems *)

01. 1 ⊢ x = y, hypo.
02. 1 ⊢ y = x, eq_subst 1 eq_refl, P u ↔ u = x.
eq_symm. ⊢ x = y → y = x, subj_intro 2.

01. 1 ⊢ y = x, hypo.
02. 1 ⊢ x = y, eq_symm 1.
03. 1 ⊢ P x → P y, subj_elim eq_subst 2.
eq_subst_rev. ⊢ y = x → P x → P y, subj_intro 3.

01. 1 ⊢ x = y, hypo.
02. ⊢ f x = f x, eq_refl.
03. 1 ⊢ f x = f y, eq_subst 1 2, P u ↔ f x = f u.
f_equal. ⊢ x = y → f x = f y, subj_intro 3.

01. 1 ⊢ x = y, hypo.
02. 2 ⊢ y = z, hypo.
03. 1 ⊢ y = x, eq_symm 1.
04. 1, 2 ⊢ x = z, eq_subst 3 2, P u ↔ u = z.
eq_trans. ⊢ x = y → y = z → x = z, subj_intro_ii 4.

01. 1 ⊢ ¬x = y, hypo.
02. 2 ⊢ y = x, hypo.
03. 2 ⊢ x = y, eq_symm 2.
04. 1, 2 ⊢ ⊥, neg_elim 1 3.
05. 1 ⊢ ¬y = x, neg_intro 4.
neq_symm. ⊢ ¬x = y → ¬y = x, subj_intro 5.

01. 1 ⊢ ∀x. x = y → A, hypo.
02. 1 ⊢ y = y → A, uq_elim 1.
03. ⊢ y = y, eq_refl.
04. 1 ⊢ A, subj_elim 2 3.
disused_eq. ⊢ (∀x. x = y → A) → A, subj_intro 4.

(*/subsection Unique existence *)

01. 1 ⊢ ∃x. P x, hypo.
02. 2 ⊢ ∀x. ∀y. P x → P y → x = y, hypo.
03. 3 ⊢ P x, hypo.
04. 2 ⊢ ∀y. P x → P y → x = y, uq_elim 2.
05. 2 ⊢ P x → P y → x = y, uq_elim 4.
06. 2, 3 ⊢ P y → x = y, subj_elim 5 3.
07. 7 ⊢ x = y, hypo.
08. 3, 7 ⊢ P y, eq_subst 7 3.
09. 3 ⊢ x = y → P y, subj_intro 8.
10. 2, 3 ⊢ x = y ↔ P y, bij_intro 9 6.
11. 2, 3 ⊢ ∀y. x = y ↔ P y, uq_intro 10.
12. 2, 3 ⊢ ∃x. ∀y. x = y ↔ P y, ex_intro 11.
13. 1, 2 ⊢ ∃x. ∀y. x = y ↔ P y, ex_elim 1 12.
ex_uniq_intro. ⊢ (∃x. P x) → (∀x. ∀y. P x → P y → x = y) →
  (∃x. ∀y. x = y ↔ P y), subj_intro_ii 13.

01. 1 ⊢ ∃x. ∀y. x = y ↔ P y, hypo.
02. 2 ⊢ ∀y. x = y ↔ P y, hypo.
03. 2 ⊢ x = x ↔ P x, uq_elim 2.
04. 2 ⊢ x = x → P x, bij_eliml 3.
05. ⊢ x = x, eq_refl.
06. 2 ⊢ P x, subj_elim 4 5.
07. 2 ⊢ ∃x. P x, ex_intro 6.
08. 1 ⊢ ∃x. P x, ex_elim 1 7.
ex_uniq_eliml. ⊢ (∃x. ∀y. x = y ↔ P y) → (∃x. P x), subj_intro 8.

01. 1 ⊢ ∃x. ∀y. x = y ↔ P y, hypo.
02. 2 ⊢ ∀y. u = y ↔ P y, hypo.
03. 3 ⊢ P x, hypo.
04. 4 ⊢ P y, hypo.
05. 2 ⊢ u = x ↔ P x, uq_elim 2.
06. 2 ⊢ u = y ↔ P y, uq_elim 2.
07. 2 ⊢ P x → u = x, bij_elimr 5.
08. 2 ⊢ P y → u = y, bij_elimr 6.
09. 3, 2 ⊢ u = x, subj_elim 7 3.
10. 4, 2 ⊢ u = y, subj_elim 8 4.
11. 3, 2 ⊢ x = u, eq_symm 9.
12. 3, 4, 2 ⊢ x = y, eq_trans 11 10.
13. 1, 3, 4 ⊢ x = y, ex_elim 1 12.
ex_uniq_elimr. ⊢ (∃x. ∀y. x = y ↔ P y) → P x → P y → x = y,
  subj_intro_iii 13.

01. 1 ⊢ ∃x. S x ∧ P x, hypo.
02. 2 ⊢ ∀x. ∀y. P x → P y → x = y, hypo.
03. 3 ⊢ S x ∧ P x, hypo.
04. 3 ⊢ S x, conj_eliml 3.
05. 3 ⊢ P x, conj_elimr 3.
06. 6 ⊢ x = y, hypo.
07. 3, 6 ⊢ P y, eq_subst 6 5.
08. 3 ⊢ x = y → P y, subj_intro 7.
09. 2 ⊢ ∀y. P x → P y → x = y, uq_elim 2.
10. 2 ⊢ P x → P y → x = y, uq_elim 9.
11. 2, 3 ⊢ P y → x = y, subj_elim 10 5.
12. 2, 3 ⊢ x = y ↔ P y, bij_intro 8 11.
13. 2, 3 ⊢ ∀y. x = y ↔ P y, uq_intro 12.
14. 2, 3 ⊢ S x ∧ ∀y. x = y ↔ P y, conj_intro 4 13.
15. 2, 3 ⊢ ∃x. S x ∧ ∀y. x = y ↔ P y, ex_intro 14.
16. 1, 2 ⊢ ∃x. S x ∧ ∀y. x = y ↔ P y, ex_elim 1 15.
ex_uniq_set_intro. ⊢ (∃x. S x ∧ P x) → (∀x. ∀y. P x → P y → x = y) →
  (∃x. S x ∧ ∀y. x = y ↔ P y), subj_intro_ii 16.

01. 1 ⊢ ∃x. S x ∧ ∀y. x = y ↔ P y, hypo.
02. 2 ⊢ S u ∧ ∀y. u = y ↔ P y, hypo.
03. 2 ⊢ ∀y. u = y ↔ P y, conj_elimr 2.
04. 4 ⊢ P x, hypo.
05. 5 ⊢ P y, hypo.
06. 2 ⊢ u = x ↔ P x, uq_elim 3.
07. 2 ⊢ u = y ↔ P y, uq_elim 3.
08. 2 ⊢ P x → u = x, bij_elimr 6.
09. 2 ⊢ P y → u = y, bij_elimr 7.
10. 4, 2 ⊢ u = x, subj_elim 8 4.
11. 5, 2 ⊢ u = y, subj_elim 9 5.
12. 4, 2 ⊢ x = u, eq_symm 10.
13. 4, 5, 2 ⊢ x = y, eq_trans 12 11.
14. 1, 4, 5 ⊢ x = y, ex_elim 1 13.
ex_uniq_set_elimr. ⊢ (∃x. S x ∧ ∀y. x = y ↔ P y) → P x → P y → x = y,
  subj_intro_iii 14.

01. 1 ⊢ ∃x. S x ∧ P x ∧ ∀y. P y → x = y, hypo.
02. 2 ⊢ S x ∧ P x ∧ ∀y. P y → x = y, hypo.
03. 2 ⊢ S x, conj_elimll 2.
04. 2 ⊢ P x, conj_elimlr 2.
05. 2 ⊢ ∀y. P y → x = y, conj_elimr 2.
06. 2 ⊢ P y → x = y, uq_elim 5.
07. 7 ⊢ x = y, hypo.
08. 2, 7 ⊢ P y, eq_subst 7 4.
09. 2 ⊢ x = y → P y, subj_intro 8.
10. 2 ⊢ x = y ↔ P y, bij_intro 9 6.
11. 2 ⊢ ∀y. x = y ↔ P y, uq_intro 10.
12. 2 ⊢ S x ∧ ∀y. x = y ↔ P y, conj_intro 3 11.
13. 2 ⊢ ∃x. S x ∧ ∀y. x = y ↔ P y, ex_intro 12.
14. 1 ⊢ ∃x. S x ∧ ∀y. x = y ↔ P y, ex_elim 1 13.
ex_uniq_from_mixed_form. ⊢ (∃x. S x ∧ P x ∧ ∀y. P y → x = y) →
  (∃x. S x ∧ ∀y. x = y ↔ P y), subj_intro 14.

01. 1 ⊢ ∀x. P x → Q x, hypo.
02. 2 ⊢ ∃x. P x ∧ R x, hypo.
03. 3 ⊢ P u ∧ R u, hypo.
04. 1 ⊢ P u → Q u, uq_elim 1.
05. 3 ⊢ P u, conj_eliml 3.
06. 1, 3 ⊢ Q u, subj_elim 4 5.
07. 3 ⊢ R u, conj_elimr 3.
08. 1, 3 ⊢ Q u ∧ R u, conj_intro 6 7.
09. 1, 3 ⊢ ∃x. Q x ∧ R x, ex_intro 8.
10. 1, 2 ⊢ ∃x. Q x ∧ R x, ex_elim 2 9.
ex_weaken_conj. ⊢ (∀x. P x → Q x) → (∃x. P x ∧ R x) →
  (∃x. Q x ∧ R x), subj_intro_ii 10.

